q_id	question_text	answer1	answer2	deu_link
rn1egq	It is said that if you wipe a hard drive with all zeros it's theoretically possible to recover the data, how? 	Not sure why everyone here is saying it's super expensive to restore deleted files. <br />Free ware programs can often recover files over written by 0.	When the hard drive is writing it's basically turning a sequence of electric pulses into magnetic fields being one direction or another.<br />If I overwrite a 1 with a 0, it's going to trying to turn the magnetic domain on that area of the platter 180 degrees. Because it's only a pulse, the magnetic field may only turn 175 degrees or 170 degrees. It's still clearly the other direction but not quite aligned. If I overwrite a 0 with a 0 it's going to reinforce the direction of the magnetic domain because the pulse is going to drag whatever crystals are almost in line even further in line with the magnetic field lines.<br />Now say I run over that disk but instead of looking for north-south alignment I look for magnetic domains that are close to perfectly aligned and magnetic domains that are out of alignment. If the magnetic domain is out of alignment I know it's probably going to be a 1 overwritten by a 0. If it's strongly aligned I know it's probably a 0 that was reinforced by being written to by another 0.	HHh[5][1]
qsnpfk	How do memory products such as an SD card or flash drive store memory and keep it saved when it doesn't have a power source? 	When you save something to an SD card or flash drive, the device writes the data to a memory chip. This chip is made up of thousands of tiny cells that can each hold a charge. When you remove the SD card or flash drive from your computer, the chip continues to hold the stored data. Even if there is no power source, the data will remain stored on the chip until it is erased.	You might be familiar with transistors. They are basically tiny switches. One kind of transistor called Field Effect Transistor (FET) conducts electricity if you apply a voltage to its gate. If you remove the voltage it doesn’t conduct (or vice-versa, there are two flavours).<br />https://www.rs-online.com/designspark/rel-assets/dsauto/temp/uploaded/What_is_mosfet.png?w=1042<br />The nice thing about FETs is that almost no current flows through the gate. <br />Flash memory is millions of special FETs with “floating” gates.<br />The gate has a tiny capacitance which means it can hold a tiny bit of charge. Since almost no current flows through the gate this charge can last for years once it has been charged.<br />You can use this to store data. Reading doesn’t require you to remove the charge, you simply check if the transistor is conducting or isn’t.	HMM[6]
pkidku	What is happening inside the computer when it "bricks"? So I heard the term 'bricked' when people were complaining about Fallout 76 bugs. What is happening inside the computer that a video game makes the computer not turn on?	Usually, an important ROM (Read Only Memory) that contains important data (For example the most basic information on how to turn on, how to decode input from the keyboard, etc) is damaged. So when you start the computer (PC or a PSP or something else), it does not know what to do next!<br />Technically, companies are able to fix a bricked device but they usually don't. I remember Sony would replace your PSP and gave you a new one with a relatively small fee.<br />I don't know if a game would brick a PC though. Usually, it happens when you are upgrading the firmware/BIOS. Games don't have access to that.	So "bricked" when used with the Fallout 76 stuff is a bit of a misnomer. "bricking" electronics means damaging an internal component or software in such a way that you can NEVER recover from it. <br />Wiping core system ROMS, heating system beyond normal and destroying components, wiping BIOS are all forms of "bricking" ( you computer is as good as a "brick" now, doesn't and won't do anything)<br />The fallout 76 game was terribly optimized and was overheating people poorly built, or poorly cooled systems. To be fair to Fallout, if their system was that poorly designed, a failure was inevitable. People also reported it breaking their OS and windows would not boot anymore, but that is not "bricking" in the traditional sense. What you heard from the media was hype over a hated game. Games very very very rarely cause these types of issues, mainly because they don't have the ability to cause said "bricking"	HHh[8][1]
rqtdbw	why are chess computers so much better than humans? 	There are a few reasons why chess computers are typically much better than humans at playing chess. One reason is that chess computers can evaluate a large number of possible moves very quickly and accurately, something that humans are not capable of doing. Another reason is that chess computers are not susceptible to making the kinds of mistakes that humans often make, such as getting tired, emotional, or distracted. Finally, chess computers can store vast amounts of chess knowledge and use it to make better decisions, something that humans are also not capable of doing.	Because they can sift through thousands of possible moves in a second and pick the optimal one. It's simply brute-force	HMM[9]
pz3xwb	Why before 2012 I was told to use two sticks of RAM for gaming and now people are advising me to buy four in order to get maximum performance? 	Dual and quad channel.<br />Dual channel means the CPU and motherboard can use two sticks at once, doubling the performance. This means the performance of the memory, mind you, not of the entire system.<br />In modern times you have quad channel which is the same sort of thing -- the board and CPU can talk to all 4 RAM sticks at once.<br />Which means that a configuration of say, one 32 GB stick will be slower than 8+8+8+8.<br />In practice though the performance difference isn't as huge as it sounds, because from the point of view of a CPU, RAM is very slow, and the CPU uses its own internal cache whenever it can. This means the speed of RAM only matters when the CPU doesn't have what it needs on hand. This means that 4X faster memory might actually translate to a 10-20% real performance difference.<br />Still, if your board has support for it, lower size RAM sticks are cheaper, and you don't see the need to add more in the future, there's really no reason not to do it. A small performance benefit is better than none in any case.<br />If you look for benchmarks you may find some very confusing results -- some games don't care about dual/quad channel at all, some have huge performance differences. That's because different games use memory differently. A small, lightweight game probably won't benefit much. A game that pushes the limits and uses lots of RAM will probably benefit quite noticeably though.	The reason people are advising you to buy four sticks of RAM instead of two is because of the way RAM is distributed across the different channels on your motherboard. Most motherboards have four RAM slots, which are divided into two channels. If you have two sticks of RAM, they will be placed in the two slots on one of the channels. This can lead to a performance bottleneck, because the CPU can only access one stick of RAM at a time on that channel. However, if you have four sticks of RAM, they can be placed in the slots on both channels, which will allow the CPU to access two sticks of RAM at the same time and thus increase your gaming performance.	HMH[7]
pnvie5	What is a game engine, why is it some game engine more suitable for a certain game, and what is the difference within other game engines. 	a game engine is a tool used to create a video game.  Think of it a bit like an artist's studio.  If you walk into the studio of a sculpter he will have all the tools needed to make a sculpture, arranged in a sensible manner, with materials and such to assist.  If you walk into the studio of a painter she might have a few of the tools needed to make a sculpture, but not all, and they may be hard to find as she really never uses them (or uses them for something else).<br />Thus game engines are usually designed for types of games but if you want to make a space combat flight simulator the tools available in an engine mostly designed for 2D side scroller games wouldn't be the best.	You can also build your own engine to suit your needs but it will take much more work. Some of them are open source so they can take a copy and modify it to your needs	HHH[7][1]
p301o5	Why are save game files so small compared to the game itself? 	The game save isn't a whole new copy of the game, it's just a list of the stuff the game needs to remember about your character, inventory, location, progress through missions or dialogue trees, things like that. It doesn't need another copy of the physics engine or map (sometimes it needs the map, like in games like Minecraft where the map isn't the same between different saves).	Imagine a map of the world. It's incredibly detailed and large, right? Now, on that map, I need to specify where I am. Despite how large and detailed this map is, I only need two pieces of information: my latitude and longitude. I don't need an entire copy of the map to specify my location, because I already have a map. I just need the relevant pieces of information.<br />Game saves work in a similar way. I don't need a copy of a complex render of a sword with full animation to remember that I *have* the sword; I just need a glorified checklist that tells if I have a sword or not.	HHh[9][1]
paq0kj	why do we need Cmos batteries on motherboards instead of just having a small flash storage. 	There are a few reasons why CMOS batteries are used on motherboards instead of just having a small flash storage. <br /><br />One reason is that the CMOS battery can provide a constant power supply to the motherboard, even when the computer is turned off. This is important because the CMOS battery stores important information about the computer's settings, such as the date and time. If the CMOS battery runs out of power, these settings will be reset and the computer will not be able to function properly. <br /><br />Another reason is that CMOS batteries are not as susceptible to data loss as flash storage. This is because CMOS batteries retain their data even when the power is off, whereas flash storage needs power in order to keep its data intact. This means that CMOS batteries are more reliable for storing important data. <br /><br />Overall, CMOS batteries are more efficient and reliable than flash storage for storing data on motherboards.	Using true nonvolatile storage is possible and sometimes done these days.<br />But the battery is used to still run the clock when physically unplugged or PSU switched fully off. Not everyone has their machine connected to the Internet fulltime to keep the clock updated.	HMM[2]
q0iv64	how do people install software/programs on pcb boards? For devices with circuit boards how are people able to load the code on to it to make it perform?	If you are dealing with microcontrollers, in the most common case you write the software on a PC, and then it gets downloaded onto the microcontroller either over USB or with a custom programmer. <br />Then it runs on the microcontroller.<br />If you want more info, look for an introduction to arduino.	You don’t install software on PCBs you install software on chips. <br />Some chips are just not programmable. Their “programme” is physically baked into the chip.<br />Some chips have different operating options. You still can’t program them but you choose which options to use by setting predetermined voltages on predetermined pins (eg. Pin 0 connected to 5v, pin 1 connected to ground, pin 2 connected to 5v via a 1ohm resistor, etc).<br />Some chips do have an internal programmable memory. These have a specific set of pins that can be connected to a Serial/USB Port which are in turn connected to a pc.	HHh[3][1]
q3bpd1	If modern operating systems have trouble running old applications, how do modern video cards render graphics in old games? 	There are a few ways that modern video cards can render graphics in old games. One way is by using an emulator, which is a software program that imitates the hardware of an older system. This allows old games to run on modern systems, but can sometimes result in poorer graphics quality. Another way is by using a graphics processor that is specifically designed to render graphics in old games. These processors can provide better quality graphics than emulators, but may not be compatible with all games.	Very simply put: the *basic* communication standard for video games (driver, API etc) etc has been the same for many years, hence the ability to run old games. Even far older games from the MS DOS area could run with emulators and virtual machines, and services like GOG make money with bringing old games to current operating systems.<br />Imagine having an old car from the 1920 ... could probably still drive on a highway, but not very nice & shiny. <br />SYL	HMM[7]
r006u4	What is is a neural net really and how does it work? Ok, so I recognize that it's sort of standard to say "we don't really know how it works" and I have read articles/internet comments (I don't remember which) saying that it "resembles neurological patterns"  in some capacity or form and that "the way we don't understand how the brain works is the same way we don't understand how the human mind works" \[not exact quotes\] with this sort of spooky implication that at some level it may represent either a very rudimentary form of consciousness or an important component/process/aspect of how consciousness has developed or formed, but beyond these kind of basic simplifications, is it actually coherent or factual to say these sorts of things or is this just wishful thinking that is attempting to personify a completely computational process?	A neural net is really just a computer program that is designed to simulate the workings of the human brain. How it works is that it takes in input data, processes it, and then produces an output. The processing that it does is based on a set of rules or patterns that it has learned from previous experience.	A neural network is made up of neurons.<br />The neurons of a neural network are basically just pieces of code. Very simple individually. They simply take one or more numbers as inputs, perform some mathematical calculations, then spit out and output. Very commonly the calculation they perform is to multiply each input by some number (a weight), then add the results all together and put out the sum.<br />You take a bunch of neurons and arrange them in layers. Each output from each neuron in one layer feeds into each input of each neuron in the next layer.<br />The first and last layers of the network are special. The neurons of the first layer generally only take a single input and the last layer consists of a single neuron that takes, as input, all of the outputs of the layer above it and then provides a single sum (as normal) but "normalizes" that sum by forcing it to be a value between 0 or 1 (or sometimes forcing it to be only 0 or 1).<br />The "magic" of neural networks are the chosen weights for each neuron. Since neural networks can get fairly complex, there are some strategies, often involving feedback loops, where you can "train" a neural network on known data to produce the desired output, then unleash it on unknown data.	HMM[6]
pzpzbr	If the speed of download and streaming is decided by how fast the server is, why does high-speed internet matter? Sorry if this comes as a bit dumb, but I've seen that no matter how much my internet speed is, most activities on the internet works on how fast the server is, like say downloading, so what's the importance of getting like 1 GBPs internet?	Because you got it wrong. You don’t want to have your battlestation to be a bottleneck, steam allows for really fast DNs, and other game retailers too, for example. There is also 4K content and all types of stuff. <br />One time there was some sort of mishap at ISP side and instead of providing 250mbit/s it provided much more and I downloaded GTA V(around 90GB) in less than half an hour at speed like 70MB/s. I switched to faster plan as soon as I had the opportunity.	It’s more about if you’ve got more people in your house all doing bandwidth intensive things - so a 1gb connection will be able to support a lot of devices surfing and streaming etc  where I work we have 1gb leased line and that supports about 300 users and about 50 phone lines etc -It’s true that there is a point where the speed of your connection won’t feel any faster to you due to the limits of the sites or services you are connecting to - it’s more about supporting big internet hungry households or lots of users and devices all wanting to connect at once!	HHh[4][1]
oretc5	how cloud storage is different than just storing my files on someone else's hard drive 	Well, it is just storing your files on someone else's hard drive. However the difference mainly comes in the fact most cloud storage solutions have way more infrastructure set up to make it as smooth as possible for you. They are always online, they can be accessed from anywhere, they probably have backups upon backups, they likely have better security than a random person with a hard drive, and so on and so forth. <br />Cloud services offer the service of your files being accessible from anywhere, at any time, without you having to worry about the details.	Cloud storage is a model of data storage in which the digital data is stored in logical pools, said to be on "the cloud". The physical storage spans multiple servers (sometimes in multiple locations), and the physical environment is typically owned and managed by a hosting company. These cloud storage providers are responsible for keeping the data safe and accessible, and the user is responsible for managing access to their data. <br /><br />Cloud storage is different than just storing files on someone else's hard drive in a few key ways. First, with cloud storage the user does not have direct control over the physical storage of their data. Second, cloud storage providers typically offer more robust security and protection against data loss than most individuals could provide on their own. Finally, cloud storage providers often offer additional features and services, such as versioning and access control, that can be difficult or impossible to replicate on one's own.	HMH[5]
qhjxbq	What is Programming and why is it important to the world? 	Programming is the instructions that every electronic device uses to make them do what we want them to. Your cell phone, computer, alarm clock, car, tv, all have programs that allow them to function.	Computers are complicated machines which can follow a huge variety of simple instructions (known as code) written in specific languages. Programming is basically creating recipes of these instructions for computers to do things. You can almost think of it like combinations of magic spells to make computers do special things. <br />Anyway these recipes (or combinations of spells, if you will) can be very large and complex, and they are made to allow computers to do cool things for people who don't know these special computer spells or recipes. So by setting the computers up with these spells, programmers make it possible for non-programmers (muggles?) to use computers for things like posting such questions and getting responses on reddit, or searching for things online, or playing games, or watching cat videos.<br />Edit: should have also mentioned phones here, but I'm old school.	HHh[7][2]
pgz06m	How are cryptographic keys used to encrypt and decrypt data? In asymmetric encryption, we have a public and a private key. The way I understand it: The public key is a string that's known to everyone who communicates with someone who receives encrypted data and is used to convert data into cipher. The private key is another string that is only known to the receiver and *only that string* can be used to decrypt the data. How does that work if both strings are different?<br />Re symmetric encryption, again it's a mystery to me how a string is used to encrypt some other data but at least the key is the same and not a completely different sequence of characters.	It seems you have a decent working knowledge of encryption, but because this is eli5, consider this instead of the literal process.<br />In symmetric encryption, you have a lock box that can be locked or unlocked by only one key. That key is shared between two parties, and is responsible for both locking and unlocking.<br />In asymmetric encryption things get a bit spicier. The key metaphor breaks down, BUT you can imagine a public key to be a sealable box offered out to everyone. Once the box is sealed (with something inside) and it's sent back through the metaphorical mail, it can only be opened by the person who originally offered out the box because of manners and laws.<br />In reality the later can only occur due to math pioneered in the RSA algorithm which some folks even struggle with at 25. Just know that the products of large primes are involved, and tend to generate intermediate products in the hundreds of trillions.	So, first thing to realise is that Cryptography deals with numbers. You probably already know this, but this is ELI5 so I'll mention it to be sure.<br />So let's take a 2 digit number and multiply by 101, or 201, or 745301. Any number ending with 01. Then throw away all but the last 2 digits. You get what you start with.<br />We can split this number into factors. What 2 numbers can we multiply together to get 201? 67, and 3 work.  We can do this multiply and keep the last digits trick with each of these.<br />3 is our public key. 67 is our private key<br />So start with 61.    <br />Multiply by our public key to get 183.     <br />Keep the last 2 digits as our "encrypted" number - 83<br />To get and multiply by our private key of 67<br />83x67=5561.    <br />Take the last two digits and we have the number we started with.<br />So that illustrates the basic idea of asymmetric functions. But we can't use multiplication because it's too easy to reverse. We can do something similar with different mathematical operations though. Using powers of primes, in different numerical bases is one such operation. And there are formulas to generate  the numbers that will work for this.	HHh[3][0]
qmrh6o	How many pieces of hardware does my internet traffic pass through? I've been trying to learn more about networking, but can't seem to find any relatively simple answer to my question. Thought it was simple with basically two routers and a server, but then I learned about switches, optical equipment, and something called a content delivery network.	There are a few different types of hardware that your internet traffic could pass through, but typically it would go through a router, switch, and server. Sometimes it may also go through optical equipment or a content delivery network.	The short answer is a lot!<br />The amount of equipment your web traffic will pass through depends on where your destination server is and how far away it is.<br />A typical data path might be:<br />Your Laptop > Home Router > Modem > ISP CMTS > multiple ISP Fiber switches > NSA tracking device > ISP border routers > Hand off to another ISPs routers > more fiber switches > Datacenter Routers > Datacenter switches > Remote companies Firewall > Remote Companies WAF > Load Balancers > Front End Servers > Firewall > Switching > Database Server	HMM[40]
ojavtb	Why does storage in a hard-drive run out of space? Surely files aren't tangible, right? 	Imagine a piece of paper. You can write as many words on that paper as you want, but they can't overlap. Eventually you will run of space.<br />A harddrive is similar. All data saved can be boiled down to a series of 1's and 0's. Hardrives only have so much memory to store all these numbers.	Well, technically, they are tangible.<br />You probably heard that files are stored as "a bunch of 0s and 1s". Well those 0s and 1s are basically stored is super-tiny switches that can be set in 2 different positions (called 0 and 1). One Byte is 8 such switches, so 1 TB is 8 *trillions* of such very tiny switches. That's a lot, but not infinite, you can only store so much data before you run out of space.	HHH[6][16]
q32dou	Does older computer affect performance? Like a computer that i have use for 5 years	Yes, an older computer can affect performance. For example, an older computer may have a slower processor, less memory, and a smaller hard drive, which can all lead to reduced performance. Additionally, over time, an older computer can accumulate dust and other debris, which can also impede performance.	An older computer is less powerful than devices sold today. Applications and websites grow in size all the time, and may not run well on older machines.<br />An old installation of software may suffer from disk fragmentation (on true magnetic disks) and increased size of the registry or other configuration files. This gets worse if software gets installed and uninstalled often, and the temporary files are not separated on their own partition. A noticeable speedup can be gained by reinstalling then operating system, and adding only required applications and drivers with minimal features.<br />As long as the computer works without errors, its actual performance will not degrade. But we usually demand more of it.<br />It is possible for parts to be damaged by heat if the computer is really dirty, but the effects would then be quite prominent, such as the machine shutting down, fans spinning extremely fast, or the speed throttling down a few times.	HMM[4]
p2uy5h	Why is a pc download size and a console dowoad size different for the same game? 	There are a few reasons why a PC download size might be different than a console download size for the same game. One reason is that the PC version of a game might be more graphically demanding than the console version, and thus require more data to be downloaded. Another reason is that the PC version of a game might include more content than the console version - for example, extra levels, bonus features, etc. Finally, it's also possible that the PC version of a game is simply a higher-quality version than the console version, and thus requires more data to be downloaded.	Primarily because of the varying settings. All xboxes or all ps5s or whatever console are all fairly uniform in every part of their hardware except maybe overall harddrive space. They process things all the same way so there's no need to account for variance. PCs vary so much in processing power and capabilities that you'd more likely have trouble finding two that are exactly the same. <br />The game producers have to account for this by creating a game that looks nice enough that it doesn't appear to be outdated, but keep requirements low enough that users with lower end PCs can still run them even if they have to change the graphics settings to do so. If they don't do this then they run the risk of alienating one group or the other and missing out on potential profit	HMM[8]
qvimme	. How can some companies (Amazon, Steam, Dropbox etc...) send TERABITS of data over internet while the normal user is in MEGABITS. 	You only have 1 internet connection, and it's most likely running over copper wires. Copper has quality issues over longer distances.<br />These big companies have many many internet connections all over the world made of fiber optic cables which can transmit data for miles with no significant signal degradation. Speeds of 10 or even 100 gigabits (1 gigabit = 1,000 megabits) are very common on these lines.<br />And I do need to point out, these companies don't have all their stuff in one place, much less one country. For example if you go into Steam's settings you can in and select where you want your download to be done from. Steam has machines in all these locations, and those "terabits" are each location added up together. Steam's servers in Washington couldn't provide for the whole world's game download needs by themselves, but if everyone selects a location fairly close by (or the system makes reasonable guesses and auto-assigns locations) each location can be more reasonably sized.<br />So, yeah, totally doable.	TL;DR because they have money.<br />The cables and other equipment operated by your ISP are mostly physically capable of terabit speeds. Possibly the "last mile" connection (the cables that link your house to the rest of the street) aren't quite as capable, but more than what you're getting. Your speed is limited to megabits because you're one of many customers renting a fraction of the that total available bandwidth.<br />Companies can afford to rent a much bigger portion of that available bandwidth, rent a dedicated physical line, or have the resources to build their own infrastructure.	HHH[6][1]
